{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerId","setInterval","setState","prevProps","props","name","console","log","clearInterval","toLocaleTimeString","isClockVisible","printIntoConsole","React","Component","App","clockName","num","Math","floor","random","generateRendom","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAIaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,kEAKuB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,SACzB,OARP,yCAWqBK,GACbJ,KAAKK,MAAMC,OAASF,EAAUE,MAEhCC,QAAQC,IAAR,qCAA0CJ,EAAUE,KAApD,eAA+DN,KAAKK,MAAMC,SAdhF,6CAmBIG,cAAcT,KAAKC,WAnBvB,yCAuBIM,QAAQC,IAAIR,KAAKH,MAAMC,KAAKY,wBAvBhC,+BA0BY,IACAZ,EAASE,KAAKH,MAAdC,KACAa,EAAmBX,KAAKK,MAAxBM,eAMR,OAJIA,GACFX,KAAKY,mBAIL,2BACGD,GAAc,wBACMb,EAAKY,2BArClC,GAA2BG,IAAMC,WCIpBC,G,MAAb,kDACE,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAIRR,MAAQ,CACNc,gBAAgB,EAChBK,UAAW,GALX,EAAKC,IAAMZ,EAAMY,IAFA,EADrB,6DAYI,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMnB,KAAKiB,QAZtD,+BAeY,IAAD,SAC+BjB,KAAKH,MAAnCc,EADD,EACCA,eAAgBK,EADjB,EACiBA,UAClBI,EAASpB,KAAKqB,eAnBZ,IAqBR,OACE,yBAAKC,UAAU,OACb,2CACA,kBAAC,EAAD,CAAOX,eAAgBA,EAAgBL,KAAMU,IAC7C,4BACEO,KAAK,SACLC,QAAS,WACP,EAAKrB,SAAS,CAAEQ,gBAAgB,MAGjC,gBAEH,4BACEY,KAAK,SACLC,QAAS,WACP,EAAKrB,SAAS,CAAEQ,gBAAgB,MAGjC,gBAEH,4BACEY,KAAK,SACLC,QAAS,WACP,EAAKrB,SAAS,CAAEa,UAAWI,MAG5B,0BA7CX,GAAyBP,IAAMC,YCJ/BW,IAASC,OACP,kBAAC,EAAD,CAAKT,IAAK,KACVU,SAASC,eAAe,U","file":"static/js/main.9fa942fb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line max-len\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  printIntoConsole() {\n    console.log(this.state.date.toLocaleTimeString());\n  }\n\n  render() {\n    const { date } = this.state;\n    const { isClockVisible } = this.props;\n\n    if (isClockVisible) {\n      this.printIntoConsole();\n    }\n\n    return (\n      <p>\n        {isClockVisible\n         && `Current time: ${date.toLocaleTimeString()}`}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  isClockVisible: PropTypes.bool.isRequired,\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\nconst num = 10;\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.num = props.num;\n  }\n\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  generateRendom() {\n    return Math.floor(Math.random() * Math.floor(this.num));\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n    const random = this.generateRendom(num);\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <Clock isClockVisible={isClockVisible} name={clockName} />\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          {' Show Clock '}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          {' Hide Clock '}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: random });\n          }}\n        >\n          {' Set random name '}\n        </button>\n      </div>\n    );\n  }\n}\nApp.propTypes = {\n  num: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App num={10} />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}